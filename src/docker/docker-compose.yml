# Use root/example as user/password credentials
version: '3.1'

services:
  # actual database image
  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"  # port forwarding
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: lotto-web
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  # web access point service, for created mongo db
  mongo-express:
    image: mongo-express
    restart: always  #restart the container regardless of the exit status
    ports:
      - "8081:8081"  # port forwarding
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/  # mongodb://{mongo-image-username}:{mongo-image-password}@{mongo-image-name}:{port}

 # Redis cache service
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning   #save every 60 seconds for at least 1 operation
    volumes:
      - redis:/data

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"

volumes:
  redis:
    driver: local